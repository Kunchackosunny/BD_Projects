# -*- coding: utf-8 -*-
"""Diabetics_prediction-SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tD6prK97AK5EfoW2cMpHqGxSgYCMxcLJ
"""

import pandas as pd
import numpy as np
df=pd.read_csv('/content/diabetes.csv')
df

df1=df.groupby('Outcome') ['Outcome'].count()
df1

df['Outcome'].value_counts()

df.tail()

df.head()

print(df.dtypes)

df.columns

df.isna().sum()

x=df.iloc[:,:-1].values
x

y=df.iloc[:,-1].values
y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30,random_state=42)
x_train

x_test

y_train

y_test

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
scaler.fit(x_train)
x_train=scaler.transform(x_train)
x_test=scaler.transform(x_test)
x_test

x_train

from sklearn.svm import SVC
model=SVC()
model.fit(x_test,y_test)
y_pred=model.predict(x_test)
y_pred

y_test

from sklearn.metrics import confusion_matrix,accuracy_score
cmd=confusion_matrix(y_test,y_pred)
cmd

from sklearn.metrics import ConfusionMatrixDisplay
lab=['0','1']
cmd1=ConfusionMatrixDisplay(cmd,display_labels=lab)
cmd1.plot()

score=accuracy_score(y_test,y_pred)
score

from sklearn.metrics import classification_report
report=classification_report(y_test,y_pred)
print(report)