# -*- coding: utf-8 -*-
"""KNN-Algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j86FcILOpSIk4hxPfMVnyTZWV_nsZArj
"""

import numpy as np
import pandas as pd
df=pd.read_csv('/content/diabetes.csv')
df

df1=df.head()
df1

df2=df.tail()
df2

print(df.dtypes)

print(df.columns)

print(df.isna().sum())

x=df.iloc[:,:-1].values
x

y=df.iloc[:,-1].values
y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30,random_state=42)
x_train

x_test

y_train

y_test

#normalization step
from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
scaler.fit(x_train)
x_train=scaler.transform(x_train) # we can give the variable name as x_train and x_test itself to avoid multiple variable name. it will overright the existing variable
x_test=scaler.transform(x_test)

x_test

x_train

#model creation
from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=7)
knn.fit(x_train,y_train)# input and output trainng data is passed

y_pred=knn.predict(x_test)
y_pred

y_test

from sklearn.metrics import confusion_matrix,accuracy_score
cmd=confusion_matrix(y_test,y_pred)
cmd

score=accuracy_score(y_test,y_pred)
score

print(knn.predict([[3,150,41,20,53,8,41,7]]))