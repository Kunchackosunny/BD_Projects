# -*- coding: utf-8 -*-
"""Salary_dataset -regression_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gSO0sZQSa3WBgVeteLWDqxWisCAsnLMa
"""

import pandas as pd
import numpy as np
df=pd.read_csv('/content/Salary_Data.csv')
df

df.head()

df.tail()

df.dtypes

df.columns

print(df.isna().sum())

x=df.iloc[:,:-1]
x

y=df.iloc[:,-1]
y

import matplotlib.pyplot as plt
plt.scatter(x,y)
plt.xlabel('Year')
plt.ylabel('Salary')
plt.title('Salary-Year_graph')

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30,random_state=42)
x_train

x_test

y_train

y_test

from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)
y_pred

plt.scatter(x_train,y_train,color='b')
plt.plot(x_test,y_pred,color='r')

print(model.predict([[6.2]]))

df1=pd.DataFrame({'Actual Value':y_test,'Predicted Value':y_pred,'Difference':y_test-y_pred})
df1

#a line equation = y=mx+c
#slope
print(model.coef_)
#constant
print(model.intercept_)

from sklearn.metrics import mean_absolute_error
print("error is ",mean_absolute_error(y_test,y_pred))

from sklearn.metrics import mean_absolute_percentage_error
print("error is ",mean_absolute_percentage_error(y_test,y_pred))

from sklearn.metrics import mean_squared_error
data=mean_squared_error(y_test,y_pred)
print("error is ",data)

from sklearn.metrics import r2_score
print("error is ",r2_score(y_test,y_pred))

#RMSE
#dont have fun for_RMSE
print(np.sqrt(data))