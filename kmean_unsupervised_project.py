# -*- coding: utf-8 -*-
"""Kmean_Unsupervised_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B-KjaVDadh5WdFtnuQet6z77CIky51CT
"""

import numpy as np
import pandas as pd
df=pd.read_csv('/content/Mall_Customers.csv')
df

df.drop(['CustomerID','Gender'],axis=1,inplace=True)

df.head()

df.tail()

df.dtypes

df.columns

df.isna().sum()

#here all the columns are taken as input . since this is an unsuperviewd machine learning
x=df
x

#now we need to find the number of clusters needed
from sklearn.cluster import KMeans
wcss=[]
for i in range(1,11): #no of cluster from 1- 10
  data=KMeans(n_clusters=i,init='k-means++',random_state=42)#init=kmean to start the kmeans algorithm
  data.fit(x)
  wcss.append(data.inertia_) #inertia to find varience.. this code will append the varience from cluster value 1-10

import matplotlib.pyplot as plt
plt.plot(range(1,11),wcss)
plt.ylabel("Varience")
plt.xlabel("Cluster")
plt.title("Elbow points")

from sklearn.cluster import KMeans
data1=KMeans(n_clusters=6,init='k-means++',random_state=42)
data1.fit(x)

y=data1.predict(x)
y

#adding new column to data frame
x['Cluster']=y
x

x=df.iloc[:,:-1].values
x

y=df.iloc[:,-1].values
y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.30,random_state=42)
x_train

y_train

x_test

y_test

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
scaler.fit(x_train)
x_train=scaler.transform(x_train)
x_test=scaler.transform(x_test)
x_test

x_train

from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=7)
knn.fit(x_train,y_train)

y_pred=knn.predict(x_test)
y_pred

y_test

from sklearn.metrics import accuracy_score
score=accuracy_score(y_test,y_pred)
score